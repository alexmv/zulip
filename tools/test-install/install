#!/usr/bin/env bash
set -e

usage() {
    echo "usage: install RELEASE [...installer opts..]" >&2
    exit 1
}

RELEASE="$1"
shift || usage

INSTALLER_ARGS=("$@")

if [ -z "$RELEASE" ]; then
    usage
fi

if [ "$EUID" -ne 0 ]; then
    echo "error: this script must be run as root" >&2
    exit 1
fi

set -x

THIS_DIR="$(dirname "$(readlink -f "$0")")"
REPO_ROOT="$(dirname "$(dirname "$THIS_DIR")")"

BASE_CONTAINER_NAME=zulip-install-"$RELEASE"-base
if ! lxc-info -n "$BASE_CONTAINER_NAME" >/dev/null 2>&1; then
    "$THIS_DIR"/prepare-base "$RELEASE"
fi

while [ -z "$CONTAINER_NAME" ] || lxc-info -n "$CONTAINER_NAME" >/dev/null 2>&1; do
    shared_dir="$(mktemp -d --tmpdir "$RELEASE"-XXXXX)"
    CONTAINER_NAME=zulip-install-"$(basename "$shared_dir")"
done

message="$(
    cat <<EOF

Container:
  sudo lxc-attach --clear-env -n $CONTAINER_NAME
EOF
)"
trap 'set +x; echo "$message"' EXIT

mkdir -p /srv/zulip/test-install/pip-cache

mkdir -p "$shared_dir"/upper "$shared_dir"/work "$shared_dir"/mnt/src/zulip-server
mount -t overlay overlay \
    -o lowerdir="$REPO_ROOT",upperdir="$shared_dir"/upper,workdir="$shared_dir"/work \
    "$shared_dir"/mnt/src/zulip-server

lxc-copy --ephemeral --keepdata -n "$BASE_CONTAINER_NAME" -N "$CONTAINER_NAME" \
    -m bind="$shared_dir"/mnt:/mnt,bind=/srv/zulip/test-install/pip-cache:/root/.cache/pip

"$THIS_DIR"/lxc-wait -n "$CONTAINER_NAME"

run() {
    lxc-attach --clear-env -n "$CONTAINER_NAME" -- "$@"
}

run eatmydata -- /mnt/src/zulip-server/scripts/setup/install --self-signed-cert "${INSTALLER_ARGS[@]}"

# TODO settings.py, initialize-database, create realm
