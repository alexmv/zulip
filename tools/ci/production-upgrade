#!/usr/bin/env bash
# Given a Zulip production environment that had been installed with a
# previous version of Zulip, upgrade it to the commit being tested.
# This takes as input the tarball generated by production-build.
set -e
set -x

# Structurally, this script should just call upgrade-zulip.  However,
# because of a set of issues that result in the previously installed
# GitHub Actions Docker containers not actually working on boot, we
# need to do some preparatory steps. It is a goal to delete these
# steps.

# Reinstall rabbitmq-server.
#
# * For rabbitmq-server, we likely need to do this to work around the
# hostname changing on reboot causing RabbitMQ to not boot.
hostname
sudo apt-get -y purge rabbitmq-server
#sudo apt-get update
#sudo rm -rf /var/run/rabbitmq/pid
#sudo rm -rf /var/lib/rabbitmq
sudo apt-get -y install rabbitmq-server

# Start the postgresql service.
sudo service postgresql start

# Starting the rabbitmq-server
ps faux

#sudo apt-get install strace
#sudo mkdir /strace-logs
#sudo chmod 777 /strace-logs

ls /var/run/rabbitmq/pid || true
cat /var/run/rabbitmq/pid || true

FAILED=0
if ! sudo service rabbitmq-server start; then
    FAILED=1
fi

set +x

echo '--- pidfile'
ls /var/run/rabbitmq/pid || true
cat /var/run/rabbitmq/pid || true

echo '--- /var/run ls:'
ls -l /var/run/ || true
echo '--- /var/run/rabbitmq ls:'
ls -l /var/run/rabbitmq || true
echo '--- /var/log ls:'
ls -lrt /var/log
echo '--- rabbitmq log ls:'
ls -lrt /var/log/rabbitmq || true
echo '--- our log ls:'
ls -lrt /strace-logs || true
echo '--- log'
cat /var/log/rabbitmq/startup_log || true
echo '--- err'
cat /var/log/rabbitmq/startup_err || true
echo '--- ps faux'
ps faux
echo '--- end'

/usr/sbin/rabbitmqctl stop /var/run/rabbitmq/pid || true

cd /
sudo tar czf strace-logs.tar.gz strace-logs/* || true

exit "$FAILED"
